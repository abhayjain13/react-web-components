/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AddButtons {
        "data": object[];
    }
    interface AddCustLink {
    }
    interface AddInfo {
        "data": object[];
        "pageTitle": string;
    }
    interface CardCarousel {
        "data": object[];
        "pageTitle": string;
    }
    interface CardTitle {
        "title": string;
    }
    interface ColumnCards {
        "data": object[];
        "pageTitle": string;
    }
    interface Grid4xn {
        "data": object[];
        "pageTitle": string;
    }
    interface GridCarousel {
        "data": object[];
        "pageTitle": string;
    }
    interface PageButton {
    }
    interface PageFooter {
        "showPublish": boolean;
    }
    interface PageHeader {
        "onClick"?: any;
        "pageTitle": string;
        "showSearch": boolean;
        "userImg": string;
        "username": string;
    }
    interface PageMenu {
        "data": string[];
    }
    interface UploadFile {
        "imgFile": string;
        "onClick"?: any;
        "pageTitle": string;
        "showSearch": boolean;
        "userImg": string;
    }
}
declare global {
    interface HTMLAddButtonsElement extends Components.AddButtons, HTMLStencilElement {
    }
    var HTMLAddButtonsElement: {
        prototype: HTMLAddButtonsElement;
        new (): HTMLAddButtonsElement;
    };
    interface HTMLAddCustLinkElement extends Components.AddCustLink, HTMLStencilElement {
    }
    var HTMLAddCustLinkElement: {
        prototype: HTMLAddCustLinkElement;
        new (): HTMLAddCustLinkElement;
    };
    interface HTMLAddInfoElement extends Components.AddInfo, HTMLStencilElement {
    }
    var HTMLAddInfoElement: {
        prototype: HTMLAddInfoElement;
        new (): HTMLAddInfoElement;
    };
    interface HTMLCardCarouselElement extends Components.CardCarousel, HTMLStencilElement {
    }
    var HTMLCardCarouselElement: {
        prototype: HTMLCardCarouselElement;
        new (): HTMLCardCarouselElement;
    };
    interface HTMLCardTitleElement extends Components.CardTitle, HTMLStencilElement {
    }
    var HTMLCardTitleElement: {
        prototype: HTMLCardTitleElement;
        new (): HTMLCardTitleElement;
    };
    interface HTMLColumnCardsElement extends Components.ColumnCards, HTMLStencilElement {
    }
    var HTMLColumnCardsElement: {
        prototype: HTMLColumnCardsElement;
        new (): HTMLColumnCardsElement;
    };
    interface HTMLGrid4xnElement extends Components.Grid4xn, HTMLStencilElement {
    }
    var HTMLGrid4xnElement: {
        prototype: HTMLGrid4xnElement;
        new (): HTMLGrid4xnElement;
    };
    interface HTMLGridCarouselElement extends Components.GridCarousel, HTMLStencilElement {
    }
    var HTMLGridCarouselElement: {
        prototype: HTMLGridCarouselElement;
        new (): HTMLGridCarouselElement;
    };
    interface HTMLPageButtonElement extends Components.PageButton, HTMLStencilElement {
    }
    var HTMLPageButtonElement: {
        prototype: HTMLPageButtonElement;
        new (): HTMLPageButtonElement;
    };
    interface HTMLPageFooterElement extends Components.PageFooter, HTMLStencilElement {
    }
    var HTMLPageFooterElement: {
        prototype: HTMLPageFooterElement;
        new (): HTMLPageFooterElement;
    };
    interface HTMLPageHeaderElement extends Components.PageHeader, HTMLStencilElement {
    }
    var HTMLPageHeaderElement: {
        prototype: HTMLPageHeaderElement;
        new (): HTMLPageHeaderElement;
    };
    interface HTMLPageMenuElement extends Components.PageMenu, HTMLStencilElement {
    }
    var HTMLPageMenuElement: {
        prototype: HTMLPageMenuElement;
        new (): HTMLPageMenuElement;
    };
    interface HTMLUploadFileElement extends Components.UploadFile, HTMLStencilElement {
    }
    var HTMLUploadFileElement: {
        prototype: HTMLUploadFileElement;
        new (): HTMLUploadFileElement;
    };
    interface HTMLElementTagNameMap {
        "add-buttons": HTMLAddButtonsElement;
        "add-cust-link": HTMLAddCustLinkElement;
        "add-info": HTMLAddInfoElement;
        "card-carousel": HTMLCardCarouselElement;
        "card-title": HTMLCardTitleElement;
        "column-cards": HTMLColumnCardsElement;
        "grid-4xn": HTMLGrid4xnElement;
        "grid-carousel": HTMLGridCarouselElement;
        "page-button": HTMLPageButtonElement;
        "page-footer": HTMLPageFooterElement;
        "page-header": HTMLPageHeaderElement;
        "page-menu": HTMLPageMenuElement;
        "upload-file": HTMLUploadFileElement;
    }
}
declare namespace LocalJSX {
    interface AddButtons {
        "data"?: object[];
    }
    interface AddCustLink {
    }
    interface AddInfo {
        "data"?: object[];
        "pageTitle"?: string;
    }
    interface CardCarousel {
        "data"?: object[];
        "pageTitle"?: string;
    }
    interface CardTitle {
        "title"?: string;
    }
    interface ColumnCards {
        "data"?: object[];
        "pageTitle"?: string;
    }
    interface Grid4xn {
        "data"?: object[];
        "pageTitle"?: string;
    }
    interface GridCarousel {
        "data"?: object[];
        "pageTitle"?: string;
    }
    interface PageButton {
        "onOnClick"?: (event: CustomEvent<any>) => void;
    }
    interface PageFooter {
        "showPublish"?: boolean;
    }
    interface PageHeader {
        "onClick"?: any;
        "pageTitle"?: string;
        "showSearch"?: boolean;
        "userImg"?: string;
        "username"?: string;
    }
    interface PageMenu {
        "data"?: string[];
    }
    interface UploadFile {
        "imgFile"?: string;
        "onClick"?: any;
        "pageTitle"?: string;
        "showSearch"?: boolean;
        "userImg"?: string;
    }
    interface IntrinsicElements {
        "add-buttons": AddButtons;
        "add-cust-link": AddCustLink;
        "add-info": AddInfo;
        "card-carousel": CardCarousel;
        "card-title": CardTitle;
        "column-cards": ColumnCards;
        "grid-4xn": Grid4xn;
        "grid-carousel": GridCarousel;
        "page-button": PageButton;
        "page-footer": PageFooter;
        "page-header": PageHeader;
        "page-menu": PageMenu;
        "upload-file": UploadFile;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "add-buttons": LocalJSX.AddButtons & JSXBase.HTMLAttributes<HTMLAddButtonsElement>;
            "add-cust-link": LocalJSX.AddCustLink & JSXBase.HTMLAttributes<HTMLAddCustLinkElement>;
            "add-info": LocalJSX.AddInfo & JSXBase.HTMLAttributes<HTMLAddInfoElement>;
            "card-carousel": LocalJSX.CardCarousel & JSXBase.HTMLAttributes<HTMLCardCarouselElement>;
            "card-title": LocalJSX.CardTitle & JSXBase.HTMLAttributes<HTMLCardTitleElement>;
            "column-cards": LocalJSX.ColumnCards & JSXBase.HTMLAttributes<HTMLColumnCardsElement>;
            "grid-4xn": LocalJSX.Grid4xn & JSXBase.HTMLAttributes<HTMLGrid4xnElement>;
            "grid-carousel": LocalJSX.GridCarousel & JSXBase.HTMLAttributes<HTMLGridCarouselElement>;
            "page-button": LocalJSX.PageButton & JSXBase.HTMLAttributes<HTMLPageButtonElement>;
            "page-footer": LocalJSX.PageFooter & JSXBase.HTMLAttributes<HTMLPageFooterElement>;
            "page-header": LocalJSX.PageHeader & JSXBase.HTMLAttributes<HTMLPageHeaderElement>;
            "page-menu": LocalJSX.PageMenu & JSXBase.HTMLAttributes<HTMLPageMenuElement>;
            "upload-file": LocalJSX.UploadFile & JSXBase.HTMLAttributes<HTMLUploadFileElement>;
        }
    }
}
